services:
  postgres:
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 3

  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=${DB_HOST};Port=${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}
      - Auth0__Domain=${AUTH0_DOMAIN}
      - Auth0__ClientId=${AUTH0_CLIENT_ID}
      - Auth0__ClientSecret=${AUTH0_CLIENT_SECRET}
      - Auth0__Audience=${AUTH0_AUDIENCE}
      - Auth0__ManagementApiAudience=${AUTH0_MANAGEMENT_API_AUDIENCE}
    ports:
      - "5000:80"
    depends_on:
      postgres:
        condition: service_healthy
        
volumes:
  postgres_data: