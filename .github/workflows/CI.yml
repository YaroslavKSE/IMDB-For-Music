name: Backend Code Analysis Pipeline

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'backend/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'backend/**'
      - '.github/workflows/ci.yml'

jobs:
  analyze:
    name: Analyze Code Quality
    runs-on: windows-latest  # Using Windows for .NET analysis as per SonarCloud example

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          # Move to the repository root to ensure paths are correct
          cd ${{ github.workspace }}
          
          # Begin SonarScanner with corrected path references
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"YaroslavKSE_IMDB-For-Music" /o:"yaroslavkse" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.verbose=true /d:sonar.scm.disabled=false /d:sonar.coverage.exclusions=**/*.js,**/*.html,**/*.css /d:sonar.cs.roslyn.ignoreIssues=false
          
          # Build backend projects with explicit paths
          Write-Host "Finding and building all solutions in backend directory..."
          $solutions = Get-ChildItem -Path "${{ github.workspace }}\backend" -Include *.sln -Recurse
          foreach ($solution in $solutions) {
            Write-Host "Building solution: $($solution.FullName)"
            dotnet build $solution.FullName --configuration Release
          }
          
          # If no solutions found, try individual projects
          if ($solutions.Count -eq 0) {
            Write-Host "No solutions found, looking for project files..."
            $projects = Get-ChildItem -Path "${{ github.workspace }}\backend" -Include *.csproj -Recurse
            foreach ($project in $projects) {
              Write-Host "Building project: $($project.FullName)"
              dotnet build $project.FullName --configuration Release
            }
          }
          
          # End SonarScanner analysis
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"